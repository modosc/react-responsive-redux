{"version":3,"sources":["../src/redux.js"],"names":["defaultSizes","SET_MOBILE_DETECT","setMobileDetect","phone","tablet","mobile","desktop","type","defaultSize","initialState","fakeWidth","reducer","state","action"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,YAA7B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,4CAA1B;AAEP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,iFAE3B,EAF2B;AAAA,MAC7BC,KAD6B,QAC7BA,KAD6B;AAAA,MACtBC,MADsB,QACtBA,MADsB;AAAA,MACdC,MADc,QACdA,MADc;AAAA,MACNC,OADM,QACNA,OADM;;AAAA,SAEnB;AACVC,IAAAA,IAAI,EAAEN,iBADI;AACeE,IAAAA,KAAK,EAALA,KADf;AACsBC,IAAAA,MAAM,EAANA,MADtB;AAC8BC,IAAAA,MAAM,EAANA,MAD9B;AACsCC,IAAAA,OAAO,EAAPA;AADtC,GAFmB;AAAA,CAAxB;AAUP,OAAO,IAAME,WAAW,GAAGR,YAAY,CAACM,OAAjC;AAEP,OAAO,IAAMG,YAAY,GAAG;AAC1BN,EAAAA,KAAK,EAAE,KADmB;AAE1BC,EAAAA,MAAM,EAAE,KAFkB;AAG1BC,EAAAA,MAAM,EAAE,KAHkB;AAI1BC,EAAAA,OAAO,EAAE,KAJiB;AAK1BI,EAAAA,SAAS,EAAEF;AALe,CAArB;AAQP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,MAAM,CAACN,IAAf;AACA,SAAKN,iBAAL;AAAwB;AAAA,mEAIbQ,YAJa,GAIII,MAJJ;AAAA,YAGpBR,MAHoB,wBAGpBA,MAHoB;AAAA,YAGZD,MAHY,wBAGZA,MAHY;AAAA,YAGJD,KAHI,wBAGJA,KAHI;AAAA,YAGGG,OAHH,wBAGGA,OAHH;;AAMtB,YAAII,SAAJ;;AAEA,YAAIL,MAAJ,EAAY;AACV,cAAIF,KAAJ,EAAW;AACTO,YAAAA,SAAS,GAAGV,YAAY,CAACG,KAAzB;AACD,WAFD,MAEO,IAAIC,MAAJ,EAAY;AACjBM,YAAAA,SAAS,GAAGV,YAAY,CAACI,MAAzB;AACD,WAFM,MAEA;AAELM,YAAAA,SAAS,GAAGV,YAAY,CAACG,KAAzB;AACD;AACF,SATD,MASO,IAAIG,OAAJ,EAAa;AAClBI,UAAAA,SAAS,GAAGV,YAAY,CAACM,OAAzB;AACD,SAFM,MAEA;AAELI,UAAAA,SAAS,GAAGF,WAAZ;AACD;;AAED,+CACKI,KADL;AACYP,UAAAA,MAAM,EAANA,MADZ;AACoBD,UAAAA,MAAM,EAANA,MADpB;AAC4BD,UAAAA,KAAK,EAALA,KAD5B;AACmCG,UAAAA,OAAO,EAAPA,OADnC;AAC4CI,UAAAA,SAAS,EAATA;AAD5C;AAGD;;AACD;AACE,aAAOE,KAAP;AA9BF;AAgCD,CAjCM","sourcesContent":["import { defaultSizes } from './defaults'\n\nexport const SET_MOBILE_DETECT = '@@react-responsive-redux/SET_MOBILE_DETECT'\n\nexport const setMobileDetect = ({\n  phone, tablet, mobile, desktop,\n} = {}) => ({\n  type: SET_MOBILE_DETECT, phone, tablet, mobile, desktop,\n})\n\n// TODO - allow users to pass this in - we have to share it with our components\n// too though so maybe we need a getter/setter on our entire class?\n\n// default to a desktop size if in doubt\nexport const defaultSize = defaultSizes.desktop\n\nexport const initialState = {\n  phone: false,\n  tablet: false,\n  mobile: false,\n  desktop: false,\n  fakeWidth: defaultSize,\n}\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SET_MOBILE_DETECT: {\n    // use initialState as the default values\n    const {\n      mobile, tablet, phone, desktop,\n    } = { ...initialState, ...action }\n\n    let fakeWidth\n\n    if (mobile) {\n      if (phone) {\n        fakeWidth = defaultSizes.phone\n      } else if (tablet) {\n        fakeWidth = defaultSizes.tablet\n      } else {\n        // TODO - should we ever get here? default to the lowest value i guess\n        fakeWidth = defaultSizes.phone\n      }\n    } else if (desktop) {\n      fakeWidth = defaultSizes.desktop\n    } else {\n      // nothing set, default to our defaultSize\n      fakeWidth = defaultSize\n    }\n\n    return {\n      ...state, mobile, tablet, phone, desktop, fakeWidth,\n    }\n  }\n  default:\n    return state\n  }\n}\n"],"file":"redux.js"}