{"version":3,"sources":["../src/components.js"],"names":["MediaQueryWrapper","props","dispatch","fakeWidth","children","other","values","deviceWidth","width","propTypes","PropTypes","oneOfType","node","func","component","string","symbol","isRequired","number","defaultProps","undefined","responsiveWrapper","state","responsive","XsScreen","maxWidth","breakPoints","sm","SmScreen","query","md","MdScreen","lg","LgScreen","XsScreenHidden","minWidth","SmScreenHidden","MdScreenHidden","LgScreenHidden","DesktopScreen","MobileScreen"],"mappings":"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","sourcesContent":["// see also components/ScreenSize for another way to consume this data\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport { connect } from 'react-redux'\nimport { breakPoints } from './defaults'\n\n// eslint-disable-next-line react/function-component-definition\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const {\n    dispatch, fakeWidth, children, ...other\n  } = props\n  const values = { deviceWidth: fakeWidth, width: fakeWidth }\n  return (\n    <MediaQuery {...other} {...{ values }}>\n      {children}\n    </MediaQuery>\n  )\n}\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.symbol,\n  ]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n}\n\nMediaQueryWrapper.defaultProps = {\n  children: undefined,\n  component: 'div',\n}\n\nexport const responsiveWrapper = (props = {}) => connect((state) => ({\n  fakeWidth: state.responsive.fakeWidth, ...props,\n}))(MediaQueryWrapper)\n\nexport const XsScreen = responsiveWrapper({ maxWidth: breakPoints.sm - 1 })\nexport const SmScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.sm}px) and (max-width: ${breakPoints.md\n    - 1}px)`,\n})\nexport const MdScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.md}px) and (max-width: ${breakPoints.lg\n    - 1}px)`,\n})\nexport const LgScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.lg}px)`,\n})\n\nexport const XsScreenHidden = responsiveWrapper({ minWidth: breakPoints.sm })\nexport const SmScreenHidden = responsiveWrapper({\n  query: `(max-width: ${breakPoints.sm - 1}px), (min-width: ${\n    breakPoints.md\n  }px)`,\n})\nexport const MdScreenHidden = responsiveWrapper({\n  query: `(max-width: ${breakPoints.md - 1}px), (min-width: ${\n    breakPoints.lg\n  }px)`,\n})\nexport const LgScreenHidden = responsiveWrapper({\n  maxWidth: breakPoints.lg - 1,\n})\n\nexport { XsScreen as PhoneScreen }\nexport { SmScreen as TabletScreen }\nexport const DesktopScreen = responsiveWrapper({ minWidth: breakPoints.md })\nexport const MobileScreen = responsiveWrapper({ maxWidth: breakPoints.md - 1 })\n\nexport { XsScreenHidden as PhoneScreenHidden }\nexport { SmScreenHidden as TabletScreenHidden }\nexport { MobileScreen as DesktopScreenHidden }\nexport { DesktopScreen as MobileScreenHidden }\n"],"file":"components.js"}